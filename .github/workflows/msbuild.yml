name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
       distribution: 'adopt' # See 'Supported distributions' for available options
       java-version: '11'
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=ReleaseStatic /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}} && msbuild /m /p:Configuration=ReleaseStatic /p:Platform=x86 ${{env.SOLUTION_FILE_PATH}}
    - name: Create artifacts
      run: |
          mkdir artifacts
          copy ReleaseStatic/wrapper32.exe artifacts
          copy ReleaseStatic/AntiInject32.dll artifacts 
          copy x64/ReleaseStatic/wrapper64.exe artifacts
          copy x64/ReleaseStatic/AntiInject64.dll artifacts
          copy README.md artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
          name: GravitGuardPro
          path: artifacts
